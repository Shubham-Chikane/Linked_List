public class newll {
    // NODE class
    public static class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public static Node head;
    public static Node tail;

    // ADD element at First
    public void addFirst(int data) { // method
        // step1 === create new node
        Node new_node = new Node(data);
        // imp base case
        if (head == null) {
            head = tail = new_node;
            return;
        }
        // step 2
        new_node.next = head;
        head = new_node;
    }

    // ADD element at Last
    public void addLast(int data) {
        Node new_node = new Node(data);
        // base condition
        if (head == null) {
            head = tail = new_node;
            return;
        }
        tail.next = new_node;
        tail = new_node;
    }

    // PRint elements
    public void print() {
        Node temp = head;
        if (head == null) {
            System.out.println("LL is empty");
            return;
        }
        while (temp != null) {
            System.out.print(temp.data + "-->");
            temp = temp.next;
        }
        System.out.println("null");
    }
//add middle
    public void add(int idx, int data) {
        if(idx==0){
            addFirst(data);
            return;
        }
        Node new_Node = new Node(data);
        Node temp = head;
        int i = 0;
        while (i < idx - 1) {
            temp = temp.next;
            i++;
        }

        new_Node.next = temp.next;
        temp.next = new_Node;

    }

    public static void main(String[] args) {
        newll ll = new newll(); // where a new object ll is created for class newll
        ll.print();
        ll.addFirst(2);
        ll.print();
        ll.addFirst(1);
        ll.print();
        ll.addLast(3);
        ll.print();
        ll.addLast(4);
        ll.print();
        
    }
}
